############################################## ROBVIS PLOTS #######################################################

# First we import the ROBINS dataset from the "Data" folder on desktop
ROBINS<-read.csv("C:/Users/sotbi/Desktop/Data/ROBINS.csv", sep=";", header=TRUE)

# Now we will use the ggplot2 & robvis (development) packages to visualize the quality assessment
install.packages("ggplot2")
library(ggplot2)
install.packages("gridExtra")
library(gridExtra)
install.packages("devtools")
library(devtools)
devtools::install_github("mcguinlu/robvis")
install_github("mcguinlu/robvis")
library(robvis)

# Formulate a new data.frame for robvis
rob_dset<-ROBINS[,c("author", "diabetes", "matched", "post_2018", "D1", "D2", "D3", "D4", "D5", "D6", "D7", "robins")]
# Change the name of the column "author" into "study"
colnames(rob_dset)[1] <- "study"


# We create a new folder named "Robvis" on desktop 
folder_name <- "Robvis"
# Specify the desktop path
desktop_path <- file.path("C:/Users/sotbi/Desktop")
# Create the folder path
folder_path <- file.path(desktop_path, folder_name)

# Check if the folder already exists
if (dir.exists(folder_path)) {
  print("Folder already exists!")
} else {
  # Create the folder on the desktop
  dir.create(folder_path)
  print("Folder created successfully!")
}

# Set working space to the desktop folder that was created
setwd("C:/Users/sotbi/Desktop/Robvis/")


# Now we define the subgroups from "rob_dset"
# Then we create the plots and save them in "Robvis" folder

# To capture the size of the plots that will be produced we adjust the width & height parameters from here
# Pooled analysis parameters
# For traffic light plots
W_traf_pool <- 1400
H_traf_pool <- 990
# For summary plots
W_sum_pool <- 1200
H_sum_pool <- 740

# Pooled studies
rob_pooled<-rob_dset[,-c(which(colnames(rob_dset)=="diabetes"), which(colnames(rob_dset)=="matched"), which(colnames(rob_dset)=="post_2018"))]

# Traffic light plot
png("1. ROBINS-I traffic light plot for all studies.png", width = W_traf_pool, height = H_traf_pool)
rob_traffic_light(rob_pooled, tool = "ROBINS-I", psize = 8) +
  ggtitle("ROBINS-I traffic light plot for all studies") +
  theme(plot.title = element_text(size = 18, hjust = 0.5)) +
  theme(legend.text = element_text(size = 15)) +
  theme(plot.margin = margin(10, 10, 10, 15))
dev.off() 
# Summary plot
png("2. ROBINS-I assessment summary for all studies.png", width = W_sum_pool, height = H_sum_pool)
rob_summary(rob_pooled, tool = "ROBINS-I", overall = TRUE, weighted = FALSE) +
  ggtitle("ROBINS-I assessment summary for all studies") +
  theme(plot.title = element_text(size = 20, hjust = 0.5)) +
  theme(axis.text = element_text(size = 15)) +
  theme(axis.text.y = element_text(size = 17)) +
  theme(legend.text = element_text(size = 14)) +
  theme(plot.margin = margin(30, 30, 30, 30)) 
dev.off()
 
# similar plots will be produced so we adjust the width & height parameters from here
# Subgroup analysis parameters
# For traffic light plots
W_traf_sga <- 1300
H_traf_sga <- 920
# For summary plots
W_sum_sga <- 1000
H_sum_sga <- 800

# For studies published after or before 2018
# Studies published after 2018
rob_post_2018<-rob_dset[rob_dset$post_2018==1,]
rob_post_2018<-rob_post_2018[,-c(which(colnames(rob_post_2018)=="diabetes"), which(colnames(rob_post_2018)=="matched"), which(colnames(rob_post_2018)=="post_2018"))]
# Studies published before 2018
rob_pre_2018<-rob_dset[rob_dset$post_2018==0,]
rob_pre_2018<-rob_pre_2018[,-c(which(colnames(rob_pre_2018)=="diabetes"), which(colnames(rob_pre_2018)=="matched"), which(colnames(rob_pre_2018)=="post_2018"))]

# Traffic light plot for studies published after 2018
png("3. ROBINS-I traffic light plot for studies published after 2018.png", width = W_traf_sga, height = H_traf_sga)
rob_traffic_light(rob_post_2018, tool = "ROBINS-I", psize = 9) +
  ggtitle("ROBINS-I traffic light plot for studies published after 2018") +
  theme(plot.title = element_text(size = 18, hjust = 0.5)) +
  theme(legend.text = element_text(size = 15)) +
  theme(plot.margin = margin(10, 10, 10, 15))
dev.off() 
# Traffic light plot for studies published before 2018
png("4. ROBINS-I traffic light plot for studies published before 2018.png", width = W_traf_sga, height = H_traf_sga)
rob_traffic_light(rob_pre_2018, tool = "ROBINS-I", psize = 9) +
  ggtitle("ROBINS-I traffic light plot for studies published before 2018") +
  theme(plot.title = element_text(size = 18, hjust = 0.5)) +
  theme(legend.text = element_text(size = 15)) +
  theme(plot.margin = margin(10, 10, 10, 15))
dev.off()  

png("5. ROBINS-I assessment summary for studies published after or before 2018.png", width = W_sum_sga, height = H_sum_sga)
# Summary plot for studies published after 2018
plot_1 <- rob_summary(rob_post_2018, tool = "ROBINS-I", overall = TRUE, weighted = FALSE) +
  ggtitle("ROBINS-I assessment summary for studies published after 2018") +
  theme(plot.title = element_text(size = 20, hjust = 0.5)) +
  theme(axis.text = element_text(size = 15)) +
  theme(axis.text.y = element_text(size = 17)) +
  theme(legend.text = element_text(size = 14)) +
  theme(plot.margin = margin(30, 30, 30, 30))
# Summary plot for studies published before 2018
plot_2 <- rob_summary(rob_pre_2018, tool = "ROBINS-I", overall = TRUE, weighted = FALSE) +
  ggtitle("ROBINS-I assessment summary for studies published before 2018") +
  theme(plot.title = element_text(size = 20, hjust = 0.5)) +
  theme(axis.text = element_text(size = 15)) +
  theme(axis.text.y = element_text(size = 17)) +
  theme(legend.text = element_text(size = 14)) +
  theme(plot.margin = margin(30, 30, 30, 30)) 
grid.arrange(plot_1, plot_2, ncol = 1)
dev.off()


# Now for studies with or without matching
# Studies with matching
rob_matched<-rob_dset[rob_dset$matched==1,]
rob_matched<-rob_matched[,-c(which(colnames(rob_matched)=="diabetes"), which(colnames(rob_matched)=="matched"), which(colnames(rob_matched)=="post_2018"))]
# Studies without matching
rob_nonmatched<-rob_dset[rob_dset$matched==0,]
rob_nonmatched<-rob_nonmatched[,-c(which(colnames(rob_nonmatched)=="diabetes"), which(colnames(rob_nonmatched)=="matched"), which(colnames(rob_nonmatched)=="post_2018"))]

# Traffic light plot for studies with matching
png("6. ROBINS-I traffic light plot for studies with patient matching.png", width = W_traf_sga, height = H_traf_sga)
rob_traffic_light(rob_matched, tool = "ROBINS-I", psize = 9) +
  ggtitle("ROBINS-I traffic light plot for studies with patient matching") +
  theme(plot.title = element_text(size = 18, hjust = 0.5)) +
  theme(legend.text = element_text(size = 15)) +
  theme(plot.margin = margin(10, 10, 10, 15))
dev.off() 
# Traffic light plot for studies without matching
png("7. ROBINS-I traffic light plot for studies without patient matching.png", width = W_traf_sga, height = H_traf_sga)
rob_traffic_light(rob_nonmatched, tool = "ROBINS-I", psize = 9) +
  ggtitle("ROBINS-I traffic light plot for studies without patient matching") +
  theme(plot.title = element_text(size = 18, hjust = 0.5)) +
  theme(legend.text = element_text(size = 15)) +
  theme(plot.margin = margin(10, 10, 10, 15))
dev.off()  

png("8. ROBINS-I assessment summary for studies with or without patient matching.png", width = W_sum_sga, height = H_sum_sga)
# Summary plot for studies with matching
plot_3 <- rob_summary(rob_matched, tool = "ROBINS-I", overall = TRUE, weighted = FALSE) +
  ggtitle("ROBINS-I assessment summary for studies with patient matching") +
  theme(plot.title = element_text(size = 20, hjust = 0.5)) +
  theme(axis.text = element_text(size = 15)) +
  theme(axis.text.y = element_text(size = 17)) +
  theme(legend.text = element_text(size = 14)) +
  theme(plot.margin = margin(30, 30, 30, 30)) 
# Summary plot for studies without matching
plot_4 <- rob_summary(rob_nonmatched, tool = "ROBINS-I", overall = TRUE, weighted = FALSE) +
  ggtitle("ROBINS-I assessment summary for studies without patient matching") +
  theme(plot.title = element_text(size = 20, hjust = 0.5)) +
  theme(axis.text = element_text(size = 15)) +
  theme(axis.text.y = element_text(size = 17)) +
  theme(legend.text = element_text(size = 14)) +
  theme(plot.margin = margin(30, 30, 30, 30)) 
grid.arrange(plot_3, plot_4, ncol = 1)
dev.off()


# Finally for studies with or without DM2 patients
# Studies with DM2
rob_DM2<-rob_dset[rob_dset$diabetes=="DM2 & no_DM2",]
rob_DM2<-rob_DM2[,-c(which(colnames(rob_DM2)=="diabetes"), which(colnames(rob_DM2)=="matched"), which(colnames(rob_DM2)=="post_2018"))]
# Studies without DM2
rob_no_DM2<-rob_dset[rob_dset$diabetes=="no_DM2",]
rob_no_DM2<-rob_no_DM2[,-c(which(colnames(rob_no_DM2)=="diabetes"), which(colnames(rob_no_DM2)=="matched"), which(colnames(rob_no_DM2)=="post_2018"))]

# Traffic light plot for studies with DM2 patients
png("9. ROBINS-I traffic light plot for studies with DM2 patients.png", width = W_traf_sga, height = H_traf_sga)
rob_traffic_light(rob_DM2, tool = "ROBINS-I", psize = 9) +
  ggtitle("ROBINS-I traffic light plot for studies with DM2 patients") +
  theme(plot.title = element_text(size = 18, hjust = 0.5)) +
  theme(legend.text = element_text(size = 15)) +
  theme(plot.margin = margin(10, 10, 10, 15))
dev.off()  
# Traffic light plot for studies without DM2 patients
png("10. ROBINS-I traffic light plot for studies without DM2 patients.png", width = W_traf_sga, height = H_traf_sga)
rob_traffic_light(rob_no_DM2, tool = "ROBINS-I", psize = 9) +
  ggtitle("ROBINS-I traffic light plot for studies without DM2 patients") +
  theme(plot.title = element_text(size = 18, hjust = 0.5)) +
  theme(legend.text = element_text(size = 15)) +
  theme(plot.margin = margin(10, 10, 10, 15))
dev.off()  


png("11. ROBINS-I assessment summary for studies with or without DM2 patients.png", width = W_sum_sga, height = H_sum_sga)
# Summary plot for studies with DM2 patients
plot_5 <- rob_summary(rob_DM2, tool = "ROBINS-I", overall = TRUE, weighted = FALSE) +
  ggtitle("ROBINS-I assessment summary for studies with DM2 patients") +
  theme(plot.title = element_text(size = 20, hjust = 0.5)) +
  theme(axis.text = element_text(size = 15)) +
  theme(axis.text.y = element_text(size = 17)) +
  theme(legend.text = element_text(size = 14)) +
  theme(plot.margin = margin(30, 30, 30, 30)) 
# Summary plot for studies without DM2 patients
plot_6 <- rob_summary(rob_no_DM2, tool = "ROBINS-I", overall = TRUE, weighted = FALSE) +
  ggtitle("ROBINS-I assessment summary for studies without DM2 patients") +
  theme(plot.title = element_text(size = 20, hjust = 0.5)) +
  theme(axis.text = element_text(size = 15)) +
  theme(axis.text.y = element_text(size = 17)) +
  theme(legend.text = element_text(size = 14)) +
  theme(plot.margin = margin(30, 30, 30, 30))
grid.arrange(plot_5, plot_6, ncol = 1)
dev.off()



